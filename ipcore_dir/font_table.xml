<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>font_table</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_miscfiles</spirit:name>
        <spirit:displayName>Miscellaneous</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:misc.files</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_miscfiles_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>4030895545</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagesynthesis</spirit:name>
        <spirit:displayName>Synthesis</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagesynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>4030895545</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguagebehavioralsimulation</spirit:name>
        <spirit:displayName>Simulation</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>4030895545</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_anylanguageinstantiationtemplate</spirit:name>
        <spirit:displayName>Instantiation Template</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis.template</spirit:envIdentifier>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_anylanguageinstantiationtemplate_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>customizationCRC</spirit:name>
            <spirit:value>4030895545</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>customizationCRCversion</spirit:name>
            <spirit:value>1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>a</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_ADDR_WIDTH&apos;))-1)-(4*spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_SPRA&apos;))*number(spirit:decode(id(&apos;MODELPARAM_VALUE.C_ADDR_WIDTH&apos;))>4)))">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.C_MEM_TYPE&apos;)) != 3) or (spirit:decode(id(&apos;MODELPARAM_VALUE.C_ADDR_WIDTH&apos;)) > 4))">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>d</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_WIDTH&apos;))-1">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_D&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dpra</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_ADDR_WIDTH&apos;))-1">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_DPRA&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>spra</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_ADDR_WIDTH&apos;))-1">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_SPRA&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_CLK&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>we</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_WE&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>i_ce</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_I_CE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qspo_ce</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QSPO_CE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qdpo_ce</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QDPO_CE&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qdpo_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QDPO_CLK&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qspo_rst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QSPO_RST&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qdpo_rst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QDPO_RST&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qspo_srst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QSPO_SRST&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qdpo_srst</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue>0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QDPO_SRST&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>spo</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_WIDTH&apos;))-1">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_SPO&apos;)) = 1">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>dpo</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_WIDTH&apos;))-1">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_DPO&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qspo</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_WIDTH&apos;))-1">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QSPO&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qdpo</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_WIDTH&apos;))-1">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_anylanguagesynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_anylanguagebehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:presence>optional</xilinx:presence>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.C_HAS_QDPO&apos;)) = 1">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="string">
        <spirit:name>c_family</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_FAMILY">virtex5</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_addr_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ADDR_WIDTH">6</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>c_default_data</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEFAULT_DATA">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_depth</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DEPTH">64</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_clk</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_CLK">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_d</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_D">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_dpo</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_DPO">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_dpra</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_DPRA">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_i_ce</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_I_CE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qdpo</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QDPO">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qdpo_ce</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QDPO_CE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qdpo_clk</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QDPO_CLK">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qdpo_rst</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QDPO_RST">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qdpo_srst</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QDPO_SRST">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qspo</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QSPO">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qspo_ce</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QSPO_CE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qspo_rst</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QSPO_RST">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_qspo_srst</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_QSPO_SRST">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_spo</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_SPO">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_spra</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_SPRA">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_has_we</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_HAS_WE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>c_mem_init_file</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MEM_INIT_FILE">null.mif</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>c_elaboration_dir</spirit:name>
        <spirit:value spirit:format="string" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_ELABORATION_DIR">./</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_mem_type</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_MEM_TYPE">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_pipeline_stages</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PIPELINE_STAGES">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_qce_joined</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_QCE_JOINED">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_qualify_we</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_QUALIFY_WE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_read_mif</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_READ_MIF">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_reg_a_d_inputs</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_REG_A_D_INPUTS">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_reg_dpra_input</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_REG_DPRA_INPUT">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_sync_enable</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_SYNC_ENABLE">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_width</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_WIDTH">16</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>c_parser_type</spirit:name>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_PARSER_TYPE">1</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_Pipeline_Stages</spirit:name>
      <spirit:enumeration spirit:text="0">0</spirit:enumeration>
      <spirit:enumeration spirit:text="1">1</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_default_data_radix</spirit:name>
      <spirit:enumeration spirit:text="2">2</spirit:enumeration>
      <spirit:enumeration spirit:text="10">10</spirit:enumeration>
      <spirit:enumeration spirit:text="16">16</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_memory_type</spirit:name>
      <spirit:enumeration spirit:text="ROM">rom</spirit:enumeration>
      <spirit:enumeration spirit:text="Single Port RAM">single_port_ram</spirit:enumeration>
      <spirit:enumeration spirit:text="Simple Dual Port RAM">simple_dual_port_ram</spirit:enumeration>
      <spirit:enumeration spirit:text="Dual Port RAM">dual_port_ram</spirit:enumeration>
      <spirit:enumeration spirit:text="SRL16-based Memory">srl16_based</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_input_options</spirit:name>
      <spirit:enumeration spirit:text="Non Registered">non_registered</spirit:enumeration>
      <spirit:enumeration spirit:text="Registered">registered</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_dual_port_address</spirit:name>
      <spirit:enumeration spirit:text="Non Registered">non_registered</spirit:enumeration>
      <spirit:enumeration spirit:text="Registered">registered</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_simple_dual_port_address</spirit:name>
      <spirit:enumeration spirit:text="Non Registered">non_registered</spirit:enumeration>
      <spirit:enumeration spirit:text="Registered">registered</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_output_options</spirit:name>
      <spirit:enumeration spirit:text="Non Registered">non_registered</spirit:enumeration>
      <spirit:enumeration spirit:text="Registered">registered</spirit:enumeration>
      <spirit:enumeration spirit:text="Both">both</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>xippack_UserParameter_choiceref_ce_overrides</spirit:name>
      <spirit:enumeration spirit:text="CE Overrides Sync Controls">ce_overrides_sync_controls</spirit:enumeration>
      <spirit:enumeration spirit:text="Sync Controls Overrides CE">sync_controls_overrides_ce</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_miscfiles_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>font_table.asy</spirit:name>
        <spirit:userFileType>asy</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>font_table.sym</spirit:name>
        <spirit:userFileType>sym</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>font_table.xco</spirit:name>
        <spirit:userFileType>xco</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagesynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>font_table.ngc</spirit:name>
        <spirit:userFileType>ngc</spirit:userFileType>
      </spirit:file>
      <spirit:file>
        <spirit:name>font_table.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguagebehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>font_table.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_anylanguageinstantiationtemplate_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>font_table.veo</spirit:name>
        <spirit:userFileType>verilogTemplate</spirit:userFileType>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>Rev 1. The LogiCORE Xilinx Distributed Memory Generator creates area and performance optimized ROM blocks, single and dual port distributed memories, and SRL16-based memories for Xilinx FPGAs. The core supersedes the previously released LogiCORE Distributed Memory core. Use this core in all new designs for supported families wherever a distributed memory is required.</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>depth</spirit:name>
      <spirit:displayName>Depth</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.DEPTH" spirit:minimum="16" spirit:maximum="65536" spirit:rangeType="long">4096</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>data_width</spirit:name>
      <spirit:displayName>Data Width</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.DATA_WIDTH" spirit:minimum="1" spirit:maximum="1024" spirit:rangeType="long">8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:displayName>Component Name</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.COMPONENT_NAME">font_table</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>memory_type</spirit:name>
      <spirit:displayName>Memory Type</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.MEMORY_TYPE" spirit:choiceRef="xippack_UserParameter_choiceref_memory_type">rom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>input_options</spirit:name>
      <spirit:displayName>Input Options</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.INPUT_OPTIONS" spirit:choiceRef="xippack_UserParameter_choiceref_input_options">non_registered</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>input_clock_enable</spirit:name>
      <spirit:displayName>Input Clock Enable</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.INPUT_CLOCK_ENABLE">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>qualify_we_with_i_ce</spirit:name>
      <spirit:displayName>Qualify WE with I_CE</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.QUALIFY_WE_WITH_I_CE">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>dual_port_address</spirit:name>
      <spirit:displayName>Dual Port Address</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.DUAL_PORT_ADDRESS" spirit:choiceRef="xippack_UserParameter_choiceref_dual_port_address">non_registered</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>simple_dual_port_address</spirit:name>
      <spirit:displayName>Simple Dual Port Address</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.SIMPLE_DUAL_PORT_ADDRESS" spirit:choiceRef="xippack_UserParameter_choiceref_simple_dual_port_address">non_registered</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>output_options</spirit:name>
      <spirit:displayName>Output Options</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.OUTPUT_OPTIONS" spirit:choiceRef="xippack_UserParameter_choiceref_output_options">non_registered</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Pipeline_Stages</spirit:name>
      <spirit:displayName>Pipeline Stages:</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.PIPELINE_STAGES" spirit:choiceRef="xippack_UserParameter_choiceref_Pipeline_Stages">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>common_output_clk</spirit:name>
      <spirit:displayName>Common Output CLK</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.COMMON_OUTPUT_CLK">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>single_port_output_clock_enable</spirit:name>
      <spirit:displayName>Single Port Output CE</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.SINGLE_PORT_OUTPUT_CLOCK_ENABLE">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>common_output_ce</spirit:name>
      <spirit:displayName>Common Output CE</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.COMMON_OUTPUT_CE">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>dual_port_output_clock_enable</spirit:name>
      <spirit:displayName>Dual Port Output CE</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.DUAL_PORT_OUTPUT_CLOCK_ENABLE">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>simple_dual_port_output_clock_enable</spirit:name>
      <spirit:displayName>Simple Dual Port Output CE</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.SIMPLE_DUAL_PORT_OUTPUT_CLOCK_ENABLE">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>coefficient_file</spirit:name>
      <spirit:displayName>Coefficients File</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.COEFFICIENT_FILE">/home/mforever78/Share/Xilinx/SimpleOS/src/hex/font.coe</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>default_data_radix</spirit:name>
      <spirit:displayName>Radix :</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.DEFAULT_DATA_RADIX" spirit:choiceRef="xippack_UserParameter_choiceref_default_data_radix">16</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>default_data</spirit:name>
      <spirit:displayName>Default Data :</spirit:displayName>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.DEFAULT_DATA">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>reset_qspo</spirit:name>
      <spirit:displayName>Reset QSPO</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.RESET_QSPO">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>reset_qdpo</spirit:name>
      <spirit:displayName>Reset QDPO</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.RESET_QDPO">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>reset_qsdpo</spirit:name>
      <spirit:displayName>Reset QSDPO</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.RESET_QSDPO">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>sync_reset_qspo</spirit:name>
      <spirit:displayName>Synchronous Reset QSPO</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.SYNC_RESET_QSPO">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>sync_reset_qdpo</spirit:name>
      <spirit:displayName>Synchronous Reset QDPO</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.SYNC_RESET_QDPO">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>sync_reset_qsdpo</spirit:name>
      <spirit:displayName>Synchronous Reset QSDPO</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.SYNC_RESET_QSDPO">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ce_overrides</spirit:name>
      <spirit:value spirit:format="string" spirit:resolve="user" spirit:id="PARAM_VALUE.CE_OVERRIDES" spirit:choiceRef="xippack_UserParameter_choiceref_ce_overrides">ce_overrides_sync_controls</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">virtex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">kintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">aartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">artix7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qartix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qvirtex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qkintex7l</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">qzynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:taxonomies>
        <xilinx:taxonomy>/Memories_&amp;_Storage_Elements/RAMs_&amp;_ROMs</xilinx:taxonomy>
        <xilinx:taxonomy>/Basic_Elements/Memory_Elements</xilinx:taxonomy>
      </xilinx:taxonomies>
      <xilinx:displayName>Distributed Memory Generator</xilinx:displayName>
      <xilinx:upgrades>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:4.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:4.2</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:4.3</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:5.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:6.1</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:6.2</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:6.3</xilinx:canUpgradeFrom>
        <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:7.1</xilinx:canUpgradeFrom>
      </xilinx:upgrades>
      <xilinx:coreCreationDateTime>2016-01-08T09:53:25</xilinx:coreCreationDateTime>
    </xilinx:coreExtensions>
    <xilinx:coreProperties>
      <xilinx:supportedFamilies>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QSpartan6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QSpartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex5</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex4</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QRVirtex4</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan3</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">ASpartan3</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan3E</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">ASpartan3E</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex4</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex5</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan3A</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">ASpartan3A</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan3ADSP</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">ASpartan3ADSP</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Spartan6L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">ASpartan6</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Kintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Virtex7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Kintex7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">zynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Artix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">AArtix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Artix7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QArtix7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QKintex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex7</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QVirtex7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">QKintex7L</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Azynq</xilinx:family>
        <xilinx:family xilinx:lifeCycle="Production">Qzynq</xilinx:family>
      </xilinx:supportedFamilies>
      <xilinx:customization>
        <xilinx:customizer>Spirit</xilinx:customizer>
        <xilinx:elaborator>Sim</xilinx:elaborator>
        <xilinx:customizationTarget>dist_mem_gen_v7.2.class</xilinx:customizationTarget>
        <xilinx:guiType>Cpp</xilinx:guiType>
        <xilinx:coreMixedCaseComponentName>false</xilinx:coreMixedCaseComponentName>
        <xilinx:upgrades>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:4.1</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:4.2</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:4.3</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:5.1</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:6.1</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:6.2</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:6.3</xilinx:canUpgradeFrom>
          <xilinx:canUpgradeFrom>xilinx.com:ip:dist_mem_gen:7.1</xilinx:canUpgradeFrom>
        </xilinx:upgrades>
      </xilinx:customization>
      <xilinx:generation>
        <xilinx:generationFlow>Spirit</xilinx:generationFlow>
        <xilinx:behavioralArchitectureName>behavioral</xilinx:behavioralArchitectureName>
        <xilinx:behavioralLibraryName>XilinxCoreLib</xilinx:behavioralLibraryName>
        <xilinx:behavioralModuleName>dist_mem_gen_v7_2</xilinx:behavioralModuleName>
        <xilinx:disableFootprint>true</xilinx:disableFootprint>
        <xilinx:keepCfamilyInCoreWrapperHdl>true</xilinx:keepCfamilyInCoreWrapperHdl>
        <xilinx:synthesisRunOptions>
          <xilinx:option xilinx:resolve="immediate">-iobuf NO</xilinx:option>
          <xilinx:option xilinx:resolve="immediate">-keep_hierarchy NO</xilinx:option>
          <xilinx:option xilinx:resolve="immediate">-resource_sharing NO</xilinx:option>
          <xilinx:option xilinx:resolve="immediate">-register_duplication NO</xilinx:option>
        </xilinx:synthesisRunOptions>
      </xilinx:generation>
      <xilinx:licensing/>
      <xilinx:display>
        <xilinx:displayName>Distributed Memory Generator</xilinx:displayName>
        <xilinx:ipType>Spirit</xilinx:ipType>
        <xilinx:coreCreationDateTime>2016-01-08T09:53:25</xilinx:coreCreationDateTime>
        <xilinx:taxonomies>
          <xilinx:taxonomy>/Memories_&amp;_Storage_Elements/RAMs_&amp;_ROMs</xilinx:taxonomy>
          <xilinx:taxonomy>/Basic_Elements/Memory_Elements</xilinx:taxonomy>
        </xilinx:taxonomies>
        <xilinx:readMeFile>$corename$/dist_mem_gen_v7_2_readme.txt</xilinx:readMeFile>
      </xilinx:display>
    </xilinx:coreProperties>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2012.4</xilinx:xilinxVersion>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
